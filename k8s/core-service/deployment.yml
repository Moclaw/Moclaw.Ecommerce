apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecom-core-api
  namespace: ecommerce
  labels:
    app: ecom-core-api
    service: core
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ecom-core-api
  template:
    metadata:
      labels:
        app: ecom-core-api
        service: core
    spec:
      nodeSelector:
        service: core
      containers:
      - name: ecom-core-api
        image: localhost:5000/ecom-core-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8081
          name: https
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Development"
        - name: ASPNETCORE_URLS
          value: "http://+:8080;https://+:8081"
        - name: DATABASE_CONNECTION
          valueFrom:
            secretKeyRef:
              name: ecom-secrets
              key: database-connection
              optional: true
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: ecom-secrets
              key: jwt-secret
              optional: true
        volumeMounts:
        - name: shared-storage
          mountPath: /app/shared
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 3
      volumes:
      - name: shared-storage
        persistentVolumeClaim:
          claimName: ecom-shared-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: ecom-core-service
  namespace: ecommerce
  labels:
    app: ecom-core-api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 443
    targetPort: 8081
    protocol: TCP
    name: https
  selector:
    app: ecom-core-api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ecom-core-ingress
  namespace: ecommerce
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: core.ecommerce.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ecom-core-service
            port:
              number: 80
