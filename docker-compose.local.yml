version: '3.8'

services:
  # Local development with hot reload
  ecom-core-dev:
    build:
      context: .
      dockerfile: Ecom.Core/src/Ecom.Core.API/Dockerfile
      target: build
    ports:
      - "5001:8080"
      - "5101:8081"
    volumes:
      - ./Ecom.Core:/src/Ecom.Core
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
    networks:
      - ecommerce-network

  ecom-users-dev:
    build:
      context: .
      dockerfile: Ecom.Users/src/Ecom.Users.API/Dockerfile
      target: build
    ports:
      - "5002:8080"
      - "5102:8081"
    volumes:
      - ./Ecom.Users:/src/Ecom.Users
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
    networks:
      - ecommerce-network

  # Production-like containers
  ecom-core-api:
    build:
      context: .
      dockerfile: Ecom.Core/src/Ecom.Core.API/Dockerfile
    ports:
      - "6001:8080"
      - "6101:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
    networks:
      - ecommerce-network
    profiles:
      - production

  ecom-users-api:
    build:
      context: .
      dockerfile: Ecom.Users/src/Ecom.Users.API/Dockerfile
    ports:
      - "6002:8080"
      - "6102:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
    networks:
      - ecommerce-network
    profiles:
      - production

  # Nginx reverse proxy for local testing
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - ecom-core-dev
      - ecom-users-dev
    networks:
      - ecommerce-network
    profiles:
      - local

networks:
  ecommerce-network:
    driver: bridge
